#include <bits/stdc++.h>
#define ll  long long
#define ld long double
#define pb(a)   push_back(a)
#define mk(a,b) make_pair(a,b)  
#define f first
#define s second
using namespace std;
const ll M=998244353;
vector<ll> fact;
vector<ll> prime;
ll inv(ll a, ll b){
 return 1<a ? b - inv(b%a,a)*b/a : 1;
}
ll mod_expo(ll a,ll b){
    return (b?(mod_expo((a*a)%M,b/2)*(b&1? a:1))%M:1);
}
ll gcd(ll a,ll b){
    return (b?gcd(b,a%b):a);
}
void find_prime(ll n){
    prime.clear();
    bool Prime[n];
    for(int i=0;i<=n;i++)Prime[i]=true;
    for(int i=2;i<=sqrt(n);i++){
        for(int j=i;i*j<=n;j++){
            Prime[i*j]=false;;
        }
    }
    for(int i=2;i<=n;i++){
        if(Prime[i])	prime.pb(i);
    }
    return;
}
vector<ll> base(ll a, ll b){
    vector<ll> c;
    while(a){
        c.pb(a%b);
        a/=b;
    }
    return c;
}
void N(){
    cout<<"No"<<endl;
}
void Y(){
    cout<<"Yes"<<endl;
}
void Answer(bool h){
	if(h)	Y();
	else N();
}
void Array(vector<ll> a){
    for(int i=0;i<a.size();i++) cout<<a[i]<<" ";
    cout<<endl;
}
vector<pair<ll,ll> > decompose_prime(ll a){
    vector<pair<ll,ll> > c;
    ll i=0;
    while(a>1){
        
        if(i<prime.size()){
            if(a%prime[i])  {
            i++;
            continue;
        }
        c.pb(mk(prime[i],0));
        while(a%prime[i]==0){
            c[c.size()-1].s++;
            a/=prime[i];
        }
        }else{
            c.pb(mk(a,1));
            break;
        }
    }
    return c;
}
void solve(){
    ll n;
    cin>>n;
    ll a[n],b[n],pre[n+1],c[n],ans[n];
    pre[0]=0;
    for(int i=0;i<n;i++){
        cin>>a[i];
        ans[i]=0;
        c[i]=0;
    }
    for(int i=0;i<n;i++){
        cin>>b[i];
        pre[i+1]=pre[i]+b[i];
    }
    for(int i=0;i<n;i++){
        ll l=i,r=n;
        ll m=(l+r)/2;
        a[i]+=pre[i];
        while(l<=r){
            if(pre[m]>a[i]){
                r=m-1;
            }
            if(pre[m]<a[i])
                l=m+1;
            if(pre[m]==a[i])break;
            m=(l+r)/2;
        }
        //pre[m]<=a[i]
        if(m==n)    continue;
        c[m]--;
        ans[m]+=a[i]-pre[m];
    }
    ll x=0;
    for(int i=0;i<n;i++){
        x++;
        x+=c[i];
        cout<<ans[i]+x*b[i]<<" ";
    }
    cout<<endl;
}
int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    ll t=1;
    cin>>t;
    fact.pb(1);
    for(int i=0;i<4e5;i++){
        fact.pb((fact[i]*(i+1))%M);
    }
    while(t--){
        solve();
    }
}